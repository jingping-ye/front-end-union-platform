(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{1057:function(t,e,n){"use strict";n.r(e);var a=n(112),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"jsx"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[t._v("#")]),t._v(" JSX")]),t._v(" "),n("blockquote",[n("p",[t._v("JSX = javascript xml 或者 JSX=javascript extension")])]),t._v(" "),n("h2",{attrs:{id:"写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#写法"}},[t._v("#")]),t._v(" 写法")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('//  dom类型标签\nconst element = <h1>123</h1>\n//  react组件类型标签\nconst element = <HelloWorld />\n//  混用dom和react\nconst element = (\n    <div>\n        <HelloWorld />\n    </div>\n)\n//  使用表达式计算\nconst element = <div>{1+2}</div>\n//  表达式中使用列表渲染\nconst element = (\n    <ul>\n        {\n            todos.map((item,index),function(){\n                return <li key="index">item<li>\n            })\n        }\n    </ul>\n)\n')])])]),n("p",[t._v("注意:")]),t._v(" "),n("ul",[n("li",[t._v("使用表达式的方法时，不能使用js多行语句。")])]),t._v(" "),n("h2",{attrs:{id:"展开属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#展开属性"}},[t._v("#")]),t._v(" 展开属性")]),t._v(" "),n("blockquote",[n("p",[t._v("​\t展开属性是es6语法，请在支持es6的环境中使用展开属性")])]),t._v(" "),n("p",[t._v("请看以下代码，假定a的属性都是接收过来的props值,我们可以写成")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('const attr = {\n    href:"www.baidu.com",\n    target:"_blank"\n}\nreturn <a {...attr}>Hello</a>\n')])])]),n("p",[n("code",[t._v("...")]),t._v("展开运算符会把属性一一展开")]),t._v(" "),n("h2",{attrs:{id:"注意"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),n("ul",[n("li",[t._v("使用jsx渲染元素时，只能使用js表达式，不能使用js多行语句。遇到需要使用多行语句时，可以使用三目运算符或者逻辑与替代")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("//  写法一\nlet complete;\nconst element = (\n    <div>\n        {\n            complete?<CompletedList />:null\n        }\n    </div>\n)\n​\n//  写法二\nlet complete;\nconst element = (\n    <div>\n        {\n            complete&&<CompletedList />\n        }\n    </div>\n)\n")])])]),n("h2",{attrs:{id:"注释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),n("p",[t._v("在jsx中注释的格式为"),n("code",[t._v("{/* 注释 */}")]),t._v("，比如")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("consr element =(\n    <div>\n        {/* 这里是一个注释 */}\n        <span>React</span>\n    </div>\n)\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);