(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{1065:function(t,e,a){"use strict";a.r(e);var n=a(112),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"列表渲染-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表渲染-map"}},[t._v("#")]),t._v(" 列表渲染 "),a("code",[t._v("map")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const todos = ['item1','item2','item3'];\nconst element = (\n    <ul>\n       {\n       \ttodos.map(function(item,index){\n       \t\t<li key={item}>{item}</li>\n       \t})\n       }\n    </ul>\n)\n")])])]),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("ul",[a("li",[t._v("使用map去渲染列表的时候，每个列表项必须有一个key,key必须是唯一的，否则将会报错")]),t._v(" "),a("li",[t._v("不要将自动循环出来的index作为key值，如果更新前后的key值是一致的，react会认为前后组件是同一个，只会对内容属性(state和props)进行变更")])])])}),[],!1,null,null,null);e.default=s.exports}}]);